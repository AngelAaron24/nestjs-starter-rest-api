version: '3.8'

services:
  # app:
  #   build:
  #     context: .
  #     args:
  #       - APP_ENV
  #   command: npm run start:dev
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./:/usr/src/app
  #     - node_modules:/usr/src/app/node_modules/
  #   environment:
  #     APP_ENV: ${APP_ENV}
  #     APP_PORT: ${APP_PORT}
  #     DB_HOST: pgsqldb
  #     DB_PORT: ${DB_PORT}
  #     DB_NAME: ${DB_NAME}
  #     DB_USER: ${DB_USER}
  #     DB_PASS: ${DB_PASS}
  #     JWT_ACCESS_TOKEN_EXP_IN_SEC: ${JWT_ACCESS_TOKEN_EXP_IN_SEC}
  #     JWT_REFRESH_TOKEN_EXP_IN_SEC: ${JWT_REFRESH_TOKEN_EXP_IN_SEC}
  #     JWT_PUBLIC_KEY_BASE64: ${JWT_PUBLIC_KEY_BASE64}
  #     JWT_PRIVATE_KEY_BASE64: ${JWT_PRIVATE_KEY_BASE64}
  #     DEFAULT_ADMIN_USER_PASSWORD: ${DEFAULT_ADMIN_USER_PASSWORD}
  #   depends_on:
  #     - pgsqldb

  pgsqldb:
    image: postgres:14.3
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASS}"
      POSTGRES_DB: "${DB_NAME}"
    ports:
      - 5432:5432
    volumes:
      - pgsqldata:/var/lib/postgresql/data
  
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    
  adminer:
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      - pgsqldb
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  node_modules:
  pgsqldata:
